<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Nothing but Wolf - Projects</title><link href="/" rel="alternate"></link><link href="/feeds/projects.atom.xml" rel="self"></link><id>/</id><updated>2017-05-01T00:00:00-05:00</updated><entry><title>My first blog, I'll use Pelican!</title><link href="/my-first-blog-ill-use-pelican.html" rel="alternate"></link><published>2017-05-01T00:00:00-05:00</published><updated>2017-05-01T00:00:00-05:00</updated><author><name>Wolf</name></author><id>tag:None,2017-05-01:/my-first-blog-ill-use-pelican.html</id><summary type="html">&lt;p&gt;I realized learning things and making projects doesn't mean much if I can't talk about and display my work. So after some research I learned I don't need to specialize in front end development or website design or javascript to build a presentable website. This is part of the progress â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I realized learning things and making projects doesn't mean much if I can't talk about and display my work. So after some research I learned I don't need to specialize in front end development or website design or javascript to build a presentable website. This is part of the progress of software becoming more user friendly and accessible. Higher level languages and static page generators!&lt;/p&gt;
&lt;p&gt;There are some great articles about static pages vs. dynamic ones out there and I'm a total amateur so I'll just &lt;a href="https://www.smashingmagazine.com/2015/11/modern-static-website-generators-next-big-thing/"&gt;link one here&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Why use a static blog?&lt;/h3&gt;
&lt;p&gt;I'm interested in something that is quick, efficient, small footprint so whatever I ultimately produce can be viewed quickly and not waste time bogged down in a database heavy website. I don't have anything against a dynamic site, and my next project will be to make a django based one on AWS. For now though a simple blog meant to present data science projects can perfectly be done on a static site.&lt;/p&gt;
&lt;p&gt;As of now the blog is not finished, and I'm not an expert on everything I've done so far. This article is more of a journal on some of the things I've done so far.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Some great resources here. Check out Nafiul Islam's &lt;a href="https://nafiulis.me/making-a-static-blog-with-pelican.html"&gt;pelican setup guide&lt;/a&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;h3&gt;Start-up&lt;/h3&gt;
&lt;p&gt;Download Python which should include pip which is a package manager.&lt;/p&gt;
&lt;p&gt;Using pip install Pelican.&lt;/p&gt;
&lt;p&gt;Use the quick set up, I chose to say Yes to uploading it to a Github page one day.&lt;/p&gt;
&lt;p&gt;Once I had a test site I started looking for a theme. It's fun to learn by picking things apart, a lot better than digging around in docs and failing a million ways.&lt;/p&gt;
&lt;h3&gt;Themes&lt;/h3&gt;
&lt;p&gt;Pelican has a repository of &lt;a href="https://github.com/getpelican/pelican-themes"&gt;default themes&lt;/a&gt; you can choose. They recommend downloading the whole thing which I did but now seems rather unnecessary. I started by using foundation-default-colours.&lt;/p&gt;
&lt;p&gt;I poked around in the theme but then found features in another blog I wanted to work with.&lt;/p&gt;
&lt;p&gt;So off to &lt;a href="https://github.com/kdeldycke/kevin-deldycke-blog"&gt;kevin-deldycke-blog&lt;/a&gt; I went. It's not a default theme but it was one I wanted to work with.&lt;/p&gt;
&lt;h3&gt;Customization&lt;/h3&gt;
&lt;p&gt;It took a few days to start getting something clean but customized.&lt;/p&gt;
&lt;p&gt;I changed the backgrounds to some Japanese inspired patterns that look subtle and organized to me.&lt;/p&gt;
&lt;p&gt;Changed the Pygment to the solarized light instead of the solarized dark, dark code background was too jarring.&lt;/p&gt;
&lt;p&gt;Then I found tango is a nice default Pygment so I compiled it to a css and inserted it.&lt;/p&gt;
&lt;p&gt;The theme was coded to option allow a Disqus comment section but after some research and just plain preference I decided to use &lt;a href="https://github.com/getpelican/pelican-plugins/tree/master/pelican_comment_system"&gt;a static comment system&lt;/a&gt;. This is a rather weird setup which won't scale well, but it's very nice for what I want now. No account needed to comment, full markdown support for comments, all personal information and data handling is performed by me not an independent service. The downside is comments aren't immediately posted and the stock handling is I have to review and add the comment manually. I may make this automatic but handling comments manually is appealing right now.&lt;/p&gt;</content><category term="website"></category><category term="static blog"></category><category term="blog"></category><category term="Pelican"></category><category term="site"></category><category term="python"></category><category term="jquery"></category><category term="pygment"></category><category term="theme"></category><category term="style"></category><category term="css"></category><category term="html"></category></entry></feed>